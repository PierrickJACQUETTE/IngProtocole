5 : status
SB STATUS IS ... IAC SE (lire while que iac)
is : 0, send 1
SB STATUS SEND IAC SE 

35:
SB X-DISPLAY-LOCATION SEND IAC SE
SB X-DISPLAY-LOCATION IS... IAC SE
pareil que 5

24: terminal-type
SB TERMINAL-TYPE SEND IAC SE
IAC SB TERMINAL-TYPE IS ... IAC SE  (lire while que iac)
pareil que 5

32:
SB TERMINAL-SPEED SEND IAC SE
SB TERMINAL-SPEED IS ... IAC SE
pareil que 5

10 : naocrd
SB NAOCRD DS <8-bit value> IAC SE
ds : 1, dr: 0
SB NAOCRD DR <8-bit value> IAC SE
8 bit : 0 <= x<=255

11 : naohts
SB NAOHTS DS <8-bit value> ... <8-bit value> IAC SE
SB NAOHTS DR <8-bit value> ... <8-bit value> IAC SE
pareil que 10

12 : naohtd
SB NAOHTD DR <8-bit value> IAC SE
SB NAOHTD DS <8-bit value> IAC SE
pareil que 10

13 : naoffd
SB NAOFFD DR <8-bit value> IAC SE
SB NAOFFD DS <8-bit value> IAC SE
pareil que 10

14 : naovts
SB NAOVTS DR <8-bit value> ... <8-bit value> IAC SE
SB NAOVTS DS <8-bit value> ... <8-bit value> IAC SE
pareil que 10

15 : naovtd
SB NAOVTD DR <8-bit value> IAC SE
SB NAOVTD DS <8-bit value> IAC SE
pareil que 10

16 :naolfd
SB NAOLFD DR <8-bit value> IAC SE
SB NAOLFD D5 <8-bit value> IAC SE
pareil que 10

17 : extend-ascii
SB EXTASC <high order bits (bits 15-8)> <low order bits (bits 7-0)> IAC SE

19 : BM
SB BM DEFINE <macro byte> <count> <replacement string> IAC SE
SB BM ACCEPT <macro byte> IAC SE
BB BM REFUSE <macro byte> <REASON> IAC SE
SB BM LITERAL <macro byte> IAC SE
SB BM PLEASE CANCEL <macro byte> <REASON> IAC SE
macro byte : 8 bit tous sauf 255
count : 8 bit un nombre
remplement char tant que !iac
define = 1, accept = 2, refuse = 3, litteral = 4, please_cancel = 5
REASON : 1 : bad-choice, 2 : too-long, 3 : wrong length, 4: other raison

22 : supup output
SB SUPDUP-OUTPUT 1 <terminal-parameters> IAC SE
SB SUPDUP-OUTPUT 2 n TD1 TD2 ..  TDn SCx SCy IAC SE
<terminal-parameters> : byte tant que !IAC
0<=n<254
tdn scx byte tant que !IAC

23: sendlocation
SB SEND-LOCATION <location> IAC SE
location : char* in ASCII tant que !IAC

27: tuid
IAC SB TUID <uuid> IAC SE
uuid : 32 bit binary number

28:
SB TTYLOC <format> <TTYLOC number with IAC doubling> IAC SE
ce sont des nombres, lire tant que !IAC

29: regime
SB 3270-REGIME ARE REGIME-LIST IAC SE
SB 3270-REGIME IS REGIME IAC SE
are : 1, is : 0
regime list : regime : char ASCII tant que !IAC

30: X.3-pad
SB  X.3-PAD  SET           <param1> <value1> ...  IAC SE
SB  X.3-PAD  RESPONSE-SET  <param1> <value1> ...  IAC SE
SB  X.3-PAD  SEND          IAC SE
SB  X.3-PAD  IS            <param1> <value1> ...  IAC SE
SB  X.3-PAD  RESPONSE-IS   <param1> <value1> ...  IAC SE
SET          is 0
RESPONSE-SET is 1
IS           is 2
RESPONSE-IS  is 3
SEND         is 4
param et value number sauf 255 donc lire tant que !IAC


31 : naws
SB NAWS <16-bit value> <16-bit value> IAC SE
lire tant que !IAC

33:
SB TOGGLE-FLOW-CONTROL n IAC SE
n:
OFF                    0
ON                     1
RESTART-ANY            2
RESTART-XON            3

36:
AC SB ENVIRON N ... IAC SE
N : 
IS               0
SEND             1
INFO             2
.. : char* tant que !IAC

37: .....



34: 
plein d'option juste lire char par char tant que !iac

20:del : rfc 732
sb : plein d'argument ........... chiant,  juste lire char par char tant que !iac


7 : rcte
sb rcte <cmd> [BC1 BC2] [TC1 TC2] IAC SE
pas tout compris rfc726
